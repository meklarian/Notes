greenkeeper - managing dependencies with confidence
stephan bonnermann

https://github.com/boennemann
https://twitter.com/boennemann

greenkeeper is npm outdated as a service - laurie voss

always up-to-date npm dependencies, zero hassle

https://greenkeeper.io/
https://github.com/greenkeeperio/greenkeeper

slide: hoodie
ref: http://hood.ie/

ref: https://npm.im/semantic-release

problem: keeping dependencies at fixed point at a specific point of time

caption: oh cool, standard just released a new major version. well... (crap)
  cascade of dependency updates

caption: yo christoph, let's automate this
  we just need npm updates
  and a way to create PRs

skimdb.npmjs.com

slide: the three parts-> npm, greenkeeper, github

module changed (npm) -> greenkeeper picks up change -> files PR

but this only useful for out-of-range updates

example: ^4.0.0 -> 5.0.0 is an out-of-range update
example: 4.0.0 -> 4.0.1 in-range update

side effect: pr generated by greenkeeper triggers CI builds
capture useful data by looking at the result of builds triggered by greenkeeper

you totally want this by now, right?

>> npm i -g greenkeeper
>> gk enable

ref: http://app.greenkeeper.io/

running updates in isolation is what makes greenkeeper valuable

some tips:
have decent tests
use version ranges
  if you use version ranges, you will keep getting updates
    (ed: that can trigger greenkeeper)
ask authors to use dist-tags
  ref: https://docs.npmjs.com/cli/dist-tag
let greenkeeper do the clean-up
  if you have a lot of PRs for the same dependency in a version, greenkeeper can clean up version updates
    !! greenkeeper can automatically rebase outstanding PRs for you
don't shoot the messenger
  help appreciated
writing software is constant change
greenkeeper makes that change visible
